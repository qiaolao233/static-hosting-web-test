/* empty css                                                      */import{$ as z}from"./index-NjlzH_8V.js";import{d as y,p as v,q as p,s as k,o as C,c as m,e as l}from"./index-CL20cr0g.js";import{_ as R}from"./plugin-vueexport-helper-DlAUqK2U.js";var f=(e=>(e[e.width=240]="width",e[e.height=240]="height",e))(f||{});const r=document.createElement("canvas");r.width=f.width/3;r.height=f.height/3;const c=r.getContext("2d");c.beginPath();c.moveTo(r.width/8,r.height/2);c.lineWidth=5;c.lineTo(r.width/8*3,r.height/8*6);c.lineTo(r.width/8*6,r.height/8);c.strokeStyle="green";c.stroke();const B=r,h=document.createElement("canvas");h.width=f.width/3;h.height=f.height/3;const d=h.getContext("2d");d.beginPath();d.lineWidth=5;d.moveTo(h.width/8*2,h.width/8*2);d.lineTo(h.width/8*6,h.height/8*6);d.moveTo(h.width/8*6,h.width/8*2);d.lineTo(h.width/8*2,h.height/8*6);d.strokeStyle="red";d.stroke();const F=h,_=e=>(i,n)=>{e.beginPath(),e.moveTo(i.x,i.y),e.lineTo(n.x,n.y),e.stroke()},a=(...e)=>{for(let i=1;i<e.length;i++)if(e[0]!==e[i])return!1;return!0};class b{constructor(i){this.isYesCanvasOrNoCanvas=!1,this.points=[[0,0,0],[0,0,0],[0,0,0]],this.onCanvasClick=x=>{var g;const{offsetX:P,offsetY:S}=x;(g=this.judgingPoint(P-this.initPoint.x,S-this.initPoint.y))==null||g.renderPoint(),this.isWin()?this.winFunc():this.isFail()&&this.failFunc()};const{canvasRef:n,initPoint:t,canvasSize:s,renderSize:o,winFunc:u=()=>{},failFunc:w=()=>{}}=i;this.canvasRef=n,this.ctx=this.canvasRef.getContext("2d"),this.initPoint=t,this.canvasSize=s,this.renderSize=o,this.winFunc=u,this.failFunc=w,this.initEvent()}destructor(){this.canvasRef.removeEventListener("click",this.onCanvasClick)}cleanBackgrond(){return this.ctx.clearRect(this.initPoint.x,this.initPoint.y,this.renderSize.width,this.renderSize.height),this.initPoints(),this.isYesCanvasOrNoCanvas=!1,this}drawBackground(){this.canvasRef.width=this.canvasSize.width,this.canvasRef.height=this.canvasSize.height,this.ctx.strokeStyle="#666",this.ctx.lineWidth=5,this.ctx.strokeRect(this.initPoint.x,this.initPoint.y,this.renderSize.width,this.renderSize.height);const i=_(this.ctx);return i({x:this.initPoint.x+0,y:this.initPoint.y+this.renderSize.height/3},{x:this.initPoint.x+this.renderSize.width,y:this.initPoint.y+this.renderSize.height/3}),i({x:this.initPoint.x+0,y:this.initPoint.y+this.renderSize.height/3*2},{x:this.initPoint.x+this.renderSize.width,y:this.initPoint.y+this.renderSize.height/3*2}),i({x:this.initPoint.x+this.renderSize.width/3,y:this.initPoint.y+0},{x:this.initPoint.x+this.renderSize.width/3,y:this.initPoint.y+this.renderSize.height}),i({x:this.initPoint.x+this.renderSize.width/3*2,y:this.initPoint.y+0},{x:this.initPoint.x+this.renderSize.width/3*2,y:this.initPoint.y+this.renderSize.height}),this}initEvent(){this.canvasRef.addEventListener("click",this.onCanvasClick)}initPoints(){this.points=[[0,0,0],[0,0,0],[0,0,0]]}judgingPoint(i,n){let t,s;i<this.renderSize.width/3?t=0:i<this.renderSize.width/3*2?t=1:t=2,n<this.renderSize.height/3?s=0:n<this.renderSize.height/3*2?s=1:s=2;let o=this.points[s][t];if(o!==void 0&&o===0)return o===0&&(this.isYesCanvasOrNoCanvas=!this.isYesCanvasOrNoCanvas,this.points[s][t]=this.isYesCanvasOrNoCanvas?1:2),this}renderPoint(){for(let i=0;i<this.points.length;i++){const n=this.points[i];for(let t=0;t<n.length;t++){const s=n[t];s===1?this.ctx.drawImage(B,this.renderSize.width/3*t+this.initPoint.x,this.renderSize.height/3*i+this.initPoint.y):s===2&&this.ctx.drawImage(F,this.renderSize.width/3*t+this.initPoint.x,this.renderSize.height/3*i+this.initPoint.y)}}}isWin(){const i=this.points;return!!(i[0][0]!==0&&a(i[0][0],i[0][1],i[0][2])||i[1][0]!==0&&a(i[1][0],i[1][1],i[1][2])||i[2][0]!==0&&a(i[2][0],i[2][1],i[2][2])||i[0][0]!==0&&a(i[0][0],i[1][0],i[2][0])||i[0][1]!==0&&a(i[0][1],i[1][1],i[2][1])||i[0][2]!==0&&a(i[0][2],i[1][2],i[2][2])||i[0][0]!==0&&a(i[0][0],i[1][1],i[2][2])||i[0][2]!==0&&a(i[0][2],i[1][1],i[2][0]))}isFail(){return!this.points.some(n=>n.some(t=>t===0))}}const N=e=>{if(e.canvasRef)return new b(e)},Y={class:"my-tictactoe"},E=y({__name:"index",setup(e){const i=v(),n=v();let t;p(()=>{i.value&&n.value&&(t=N({canvasRef:i.value,initPoint:{x:20,y:20},renderSize:{width:240,height:240},canvasSize:{width:300,height:300},winFunc:()=>{var o;(o=n.value)==null||o.showModal()},failFunc(){z({content:"平局"}),t==null||t.cleanBackgrond().drawBackground()}}),t==null||t.cleanBackgrond().drawBackground())}),k(()=>{t==null||t.destructor()});const s=()=>{n.value&&(n.value.close(),t==null||t.cleanBackgrond().drawBackground())};return(o,u)=>(C(),m("div",Y,[l("canvas",{width:"300",height:"300",ref_key:"canvasRef",ref:i},null,512),l("dialog",{ref_key:"dialogRef",ref:n},[l("div",null,[u[0]||(u[0]=l("p",null,"游戏结束！",-1)),l("p",null,[l("button",{class:"again",onClick:s}," 再来一局！ ")])])],512)]))}}),W=R(E,[["__scopeId","data-v-adbbca9c"]]);export{W as default};
